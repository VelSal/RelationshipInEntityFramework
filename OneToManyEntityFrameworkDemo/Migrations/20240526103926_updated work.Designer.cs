// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneToManyEntityFrameworkDemo.Data;

#nullable disable

namespace OneToManyEntityFrameworkDemo.Migrations
{
    [DbContext(typeof(BoekenDbContext))]
    [Migration("20240526103926_updated work")]
    partial class updatedwork
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OneToManyEntityFrameworkDemo.Models.Auteur", b =>
                {
                    b.Property<int>("AuteurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuteurId"));

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AuteurId");

                    b.ToTable("Auteurs");

                    b.HasData(
                        new
                        {
                            AuteurId = 1,
                            Naam = "I. Asimov"
                        },
                        new
                        {
                            AuteurId = 2,
                            Naam = "F. Dostoievski"
                        },
                        new
                        {
                            AuteurId = 3,
                            Naam = "S. King"
                        },
                        new
                        {
                            AuteurId = 4,
                            Naam = "J.R.R. Tolkien"
                        });
                });

            modelBuilder.Entity("OneToManyEntityFrameworkDemo.Models.Boek", b =>
                {
                    b.Property<int>("BoekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoekId"));

                    b.Property<int>("AuteurId")
                        .HasColumnType("int");

                    b.Property<int?>("BindingType")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBestSeller")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNewRelease")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BoekId");

                    b.HasIndex("AuteurId");

                    b.ToTable("Boeks");

                    b.HasData(
                        new
                        {
                            BoekId = 1,
                            AuteurId = 1,
                            Title = "Foundation"
                        },
                        new
                        {
                            BoekId = 2,
                            AuteurId = 2,
                            Title = "Crimes et Châtiments"
                        },
                        new
                        {
                            BoekId = 3,
                            AuteurId = 3,
                            Title = "Carrie"
                        },
                        new
                        {
                            BoekId = 4,
                            AuteurId = 4,
                            Title = "The Lord of the Ring"
                        },
                        new
                        {
                            BoekId = 5,
                            AuteurId = 1,
                            Title = "Robots"
                        },
                        new
                        {
                            BoekId = 6,
                            AuteurId = 2,
                            Title = "Les frères Karkarov"
                        },
                        new
                        {
                            BoekId = 7,
                            AuteurId = 3,
                            Title = "Les Régulateurs"
                        },
                        new
                        {
                            BoekId = 8,
                            AuteurId = 4,
                            Title = "The Hobbits"
                        },
                        new
                        {
                            BoekId = 9,
                            AuteurId = 4,
                            Title = "Bombadil"
                        });
                });

            modelBuilder.Entity("OneToManyEntityFrameworkDemo.Models.ViewModels.BoekAuteurViewModel", b =>
                {
                    b.Property<int>("BoekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoekId"));

                    b.Property<string>("AuteurNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BoekId");

                    b.ToTable("BoekAuteurViewModel");
                });

            modelBuilder.Entity("OneToManyEntityFrameworkDemo.Models.ViewModels.BoekenViewModel", b =>
                {
                    b.Property<int>("GeselecteerdeAuteurId")
                        .HasColumnType("int");

                    b.ToTable("BoekenViewModel");
                });

            modelBuilder.Entity("OneToManyEntityFrameworkDemo.Models.Boek", b =>
                {
                    b.HasOne("OneToManyEntityFrameworkDemo.Models.Auteur", "Auteur")
                        .WithMany("Boeken")
                        .HasForeignKey("AuteurId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Auteur");
                });

            modelBuilder.Entity("OneToManyEntityFrameworkDemo.Models.Auteur", b =>
                {
                    b.Navigation("Boeken");
                });
#pragma warning restore 612, 618
        }
    }
}
